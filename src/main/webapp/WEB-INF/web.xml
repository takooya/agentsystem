<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">

    <display-name>Archetype Created Web Application</display-name>

    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.html</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.css</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.js</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.jpg</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.png</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.gif</url-pattern>
    </servlet-mapping>
    <!--
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>项目名.root</param-value>
    </context-param>
        文件中webAppRootKey属性是web项目的绝对路径,当没有此属性时的缺点如下两点:
            1 Log4j的配置文件修改了之后必须重启才能生效
            2 配置文件只能放在WEB-INF/classes
        Spring对于Log4j有了更好的增强，通过如上配置解决了如上两点问题,参数webAppRootKey如
            果只有一个应用用了Spring对Log4J的增强，则可以不用设置；否则一定要进行设置。
        "项目名.root"这个字符串可以随便写任何字符串。如果不配置默认值是"webapp.root"。
            可以用System.getProperty("项目名.root")来动态获项目的运行路径。
            一般返回结果例如：/usr/local/tomcat6/webapps/项目名
            定义以后，在Web Container启动时将把ROOT的绝对路径写到系统变量里。
            然后log4j的配置文件里就可以用${项目名.root}来表示Web目录的绝对路径，
            把log文件存放于webapp中。
    -->
    <!--配置Log4jConfigListener的变量:为系统提供log4j配置文件的读取路径-->
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>agentsystem.root</param-value>
    </context-param>
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:mylog4j.properties</param-value>
    </context-param>
    <!--spring加载log4j-->
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    <!--ContextLoaderListener监听器的作用就是启动Web容器时，自动装配ApplicationContext的配置信息。-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    
    <listener>
        <listener-class>cn.kgc.agentsystem.systeminit.Systeminit</listener-class>
    </listener>
    <!--配置contextLoaderListener的变量,使之加载spring
        param参数定义了要装入的 Spring 配置文件-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:beans.xml</param-value>
    </context-param>

    <servlet>
        <servlet-name>mvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:beans-mvc.xml</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>mvc</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!--此过滤器使用的设置字符编码的方式是req/resp.setCharacterEncoding()
    并没有设置req/resp.getContentType()
    当forceEncoding=true时,无论原始是否赋值字符编码,都强制再次赋值-->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
</web-app>